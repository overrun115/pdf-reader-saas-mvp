version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: pdf_extractor
      POSTGRES_USER: pdf_user
      POSTGRES_PASSWORD: pdf_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pdf_user -d pdf_extractor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage (S3 compatible)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI Backend
  backend:
    build: ./backend
    image: pdf-reader-backend:latest
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://pdf_user:pdf_password@postgres:5432/pdf_extractor
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
      - uploaded_files:/app/uploads
      - data_platform:/app/data_platform
      - enterprise_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Celery Worker for background tasks
  celery_worker:
    build: ./backend
    image: pdf-reader-backend:latest
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://pdf_user:pdf_password@postgres:5432/pdf_extractor
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
      - uploaded_files:/app/uploads
      - data_platform:/app/data_platform
      - enterprise_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery worker --loglevel=info
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery_beat:
    build: ./backend
    image: pdf-reader-backend:latest
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://pdf_user:pdf_password@postgres:5432/pdf_extractor
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
      - enterprise_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery beat --loglevel=info
    restart: unless-stopped

  # React Frontend
  frontend:
    build: ./frontend
    image: pdf-reader-frontend:latest
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  minio_data:
  uploaded_files:
  data_platform:
  enterprise_logs: